name: Generate Tool Binaries

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  PPLKILLER_SOLUTION_PATH: ./PPLKiller/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get Submodules
      run: |
        git submodule update --init --force --recursive --depth=1

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: PPLKiller -  Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.PPLKILLER_SOLUTION_PATH}}

    - name: PPLKiller - Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.PPLKILLER_SOLUTION_PATH}}

    # - name: PPLKiller - Upload Build Artifact
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: PPLKiller
    #     path: PPLKiller\x64\Release\PPLKiller.exe
  
    - name: Update files on GitHub 3
      run: |
        working-directory: ${{env.GITHUB_WORKSPACE}}
        cp PPLKiller\x64\Release\PPLKiller.exe .\PPLKiller.exe
        git add .\PPLKiller.exe
        git commit -m 'Adding binaries'
        git push 
